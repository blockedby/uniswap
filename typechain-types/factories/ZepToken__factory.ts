/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZepToken, ZepTokenInterface } from "../ZepToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialBalance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "person",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "person",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600981526020017f4b434e43746f6b656e000000000000000000000000000000000000000000000081525060029080519060200190620000519291906200034c565b506040518060400160405280600481526020017f4b434e4300000000000000000000000000000000000000000000000000000000815250600390805190602001906200009f9291906200034c565b506012600455348015620000b257600080fd5b506040516200238a3803806200238a8339818101604052810190620000d8919062000485565b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160029080519060200190620001319291906200034c565b5080600390805190602001906200014a9291906200034c565b506200015d33846200016660201b60201c565b50505062000850565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001fa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001f1906200056c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156200026d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000264906200058e565b60405180910390fd5b81600560008282546200028191906200063d565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002d891906200063d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516200033f9190620005b0565b60405180910390a3505050565b8280546200035a90620006da565b90600052602060002090601f0160209004810192826200037e5760008555620003ca565b82601f106200039957805160ff1916838001178555620003ca565b82800160010185558215620003ca579182015b82811115620003c9578251825591602001919060010190620003ac565b5b509050620003d99190620003dd565b5090565b5b80821115620003f8576000816000905550600101620003de565b5090565b6000620004136200040d84620005f6565b620005cd565b9050828152602081018484840111156200042c57600080fd5b62000439848285620006a4565b509392505050565b600082601f8301126200045357600080fd5b815162000465848260208601620003fc565b91505092915050565b6000815190506200047f8162000836565b92915050565b6000806000606084860312156200049b57600080fd5b6000620004ab868287016200046e565b935050602084015167ffffffffffffffff811115620004c957600080fd5b620004d78682870162000441565b925050604084015167ffffffffffffffff811115620004f557600080fd5b620005038682870162000441565b9150509250925092565b60006200051c600c836200062c565b91506200052982620007e4565b602082019050919050565b6000620005436015836200062c565b915062000550826200080d565b602082019050919050565b62000566816200069a565b82525050565b6000602082019050818103600083015262000587816200050d565b9050919050565b60006020820190508181036000830152620005a98162000534565b9050919050565b6000602082019050620005c760008301846200055b565b92915050565b6000620005d9620005ec565b9050620005e7828262000710565b919050565b6000604051905090565b600067ffffffffffffffff821115620006145762000613620007a4565b5b6200061f82620007d3565b9050602081019050919050565b600082825260208201905092915050565b60006200064a826200069a565b915062000657836200069a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200068f576200068e62000746565b5b828201905092915050565b6000819050919050565b60005b83811015620006c4578082015181840152602081019050620006a7565b83811115620006d4576000848401525b50505050565b60006002820490506001821680620006f357607f821691505b602082108114156200070a576200070962000775565b5b50919050565b6200071b82620007d3565b810181811067ffffffffffffffff821117156200073d576200073c620007a4565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b7f4163636f756e742063616e2774206265207a65726f0000000000000000000000600082015250565b62000841816200069a565b81146200084d57600080fd5b50565b611b2a80620008606000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac14610261578063a457c2d71461027d578063a9059cbb146102ad578063dd62ed3e146102dd576100ea565b806370a08231146101f55780638da5cb5b1461022557806395d89b4114610243576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806340c10f19146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030d565b60405161010491906116c8565b60405180910390f35b610127600480360381019061012291906114fb565b61039f565b60405161013491906116ad565b60405180910390f35b610145610500565b60405161015291906117ca565b60405180910390f35b610175600480360381019061017091906114ac565b61050a565b60405161018291906116ad565b60405180910390f35b610193610869565b6040516101a091906117ca565b60405180910390f35b6101c360048036038101906101be91906114fb565b610873565b6040516101d091906116ad565b60405180910390f35b6101f360048036038101906101ee91906114fb565b610a62565b005b61020f600480360381019061020a9190611447565b610c3c565b60405161021c91906117ca565b60405180910390f35b61022d610c84565b60405161023a9190611692565b60405180910390f35b61024b610cae565b60405161025891906116c8565b60405180910390f35b61027b600480360381019061027691906114fb565b610d40565b005b610297600480360381019061029291906114fb565b610f9b565b6040516102a491906116ad565b60405180910390f35b6102c760048036038101906102c291906114fb565b61118a565b6040516102d491906116ad565b60405180910390f35b6102f760048036038101906102f29190611470565b611396565b60405161030491906117ca565b60405180910390f35b60606002805461031c90611906565b80601f016020809104026020016040519081016040528092919081815260200182805461034890611906565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610410576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104079061176a565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104ee91906117ca565b60405180910390a36001905092915050565b6000600554905090565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561058d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105849061178a565b60405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561064c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610643906117aa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b39061174a565b60405180910390fd5b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461070a9190611857565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461075f9190611801565b9250508190555081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107f29190611857565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161085691906117ca565b60405180910390a3600190509392505050565b6000600454905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db9061176a565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109709190611801565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610a5091906117ca565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aea906116ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a9061172a565b60405180910390fd5b8160056000828254610b759190611801565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bca9190611801565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c2f91906117ca565b60405180910390a3505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060038054610cbd90611906565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce990611906565b8015610d365780601f10610d0b57610100808354040283529160200191610d36565b820191906000526020600020905b815481529060010190602001808311610d1957829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc8906116ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e389061172a565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb99061170a565b60405180910390fd5b8160056000828254610ed49190611857565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f299190611857565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f8e91906117ca565b60405180910390a3505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561100c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110039061176a565b60405180910390fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110989190611857565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161117891906117ca565b60405180910390a36001905092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561120d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112049061178a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561127d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112749061174a565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112cb9190611857565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113209190611801565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161138491906117ca565b60405180910390a36001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008135905061142c81611ac6565b92915050565b60008135905061144181611add565b92915050565b60006020828403121561145957600080fd5b60006114678482850161141d565b91505092915050565b6000806040838503121561148357600080fd5b60006114918582860161141d565b92505060206114a28582860161141d565b9150509250929050565b6000806000606084860312156114c157600080fd5b60006114cf8682870161141d565b93505060206114e08682870161141d565b92505060406114f186828701611432565b9150509250925092565b6000806040838503121561150e57600080fd5b600061151c8582860161141d565b925050602061152d85828601611432565b9150509250929050565b6115408161188b565b82525050565b61154f8161189d565b82525050565b6000611560826117e5565b61156a81856117f0565b935061157a8185602086016118d3565b61158381611996565b840191505092915050565b600061159b600c836117f0565b91506115a6826119a7565b602082019050919050565b60006115be601f836117f0565b91506115c9826119d0565b602082019050919050565b60006115e16015836117f0565b91506115ec826119f9565b602082019050919050565b60006116046012836117f0565b915061160f82611a22565b602082019050919050565b60006116276017836117f0565b915061163282611a4b565b602082019050919050565b600061164a6017836117f0565b915061165582611a74565b602082019050919050565b600061166d601c836117f0565b915061167882611a9d565b602082019050919050565b61168c816118c9565b82525050565b60006020820190506116a76000830184611537565b92915050565b60006020820190506116c26000830184611546565b92915050565b600060208201905081810360008301526116e28184611555565b905092915050565b600060208201905081810360008301526117038161158e565b9050919050565b60006020820190508181036000830152611723816115b1565b9050919050565b60006020820190508181036000830152611743816115d4565b9050919050565b60006020820190508181036000830152611763816115f7565b9050919050565b600060208201905081810360008301526117838161161a565b9050919050565b600060208201905081810360008301526117a38161163d565b9050919050565b600060208201905081810360008301526117c381611660565b9050919050565b60006020820190506117df6000830184611683565b92915050565b600081519050919050565b600082825260208201905092915050565b600061180c826118c9565b9150611817836118c9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561184c5761184b611938565b5b828201905092915050565b6000611862826118c9565b915061186d836118c9565b9250828210156118805761187f611938565b5b828203905092915050565b6000611896826118a9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156118f15780820151818401526020810190506118d6565b83811115611900576000848401525b50505050565b6000600282049050600182168061191e57607f821691505b6020821081141561193257611931611967565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b7f4163636f756e7420646f65736e2774206f776e207375636820616d6f756e7400600082015250565b7f4163636f756e742063616e2774206265207a65726f0000000000000000000000600082015250565b7f27546f272063616e2774206265207a65726f0000000000000000000000000000600082015250565b7f275370656e646572272063616e2774206265207a65726f000000000000000000600082015250565b7f42616c616e6365206c657373207468656e2076616c7565000000000000000000600082015250565b7f556e617574686f72697365642c20706c6561736520617070726f766500000000600082015250565b611acf8161188b565b8114611ada57600080fd5b50565b611ae6816118c9565b8114611af157600080fd5b5056fea26469706673582212204e35cb73a2a45e151ae853260e539bbd83957e6c6640d1c591e32c037342467164736f6c63430008040033";

type ZepTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZepTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZepToken__factory extends ContractFactory {
  constructor(...args: ZepTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ZepToken";
  }

  deploy(
    _initialBalance: BigNumberish,
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZepToken> {
    return super.deploy(
      _initialBalance,
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<ZepToken>;
  }
  getDeployTransaction(
    _initialBalance: BigNumberish,
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialBalance,
      tokenName,
      tokenSymbol,
      overrides || {}
    );
  }
  attach(address: string): ZepToken {
    return super.attach(address) as ZepToken;
  }
  connect(signer: Signer): ZepToken__factory {
    return super.connect(signer) as ZepToken__factory;
  }
  static readonly contractName: "ZepToken";
  public readonly contractName: "ZepToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZepTokenInterface {
    return new utils.Interface(_abi) as ZepTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZepToken {
    return new Contract(address, _abi, signerOrProvider) as ZepToken;
  }
}
