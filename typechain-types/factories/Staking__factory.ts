/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyStakeBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestUnstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    name: "setStakingDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delay",
        type: "uint256",
      },
    ],
    name: "setWithdraDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002600455600260055560146006553480156200002057600080fd5b5060405162001c8238038062001c82833981810160405281019062000046919062000127565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001b6565b60008151905062000121816200019c565b92915050565b600080604083850312156200013b57600080fd5b60006200014b8582860162000110565b92505060206200015e8582860162000110565b9150509250929050565b600062000175826200017c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001a78162000168565b8114620001b357600080fd5b50565b611abc80620001c66000396000f3fe6080604052600436106100fe5760003560e01c80638bfb08e111610095578063d1af0c7d11610064578063d1af0c7d146102ca578063d82e3962146102f5578063e042098914610332578063fc63958e1461035d578063fe3300d014610374576100fe565b80638bfb08e11461023157806399e117a01461025a5780639bce496114610285578063a694fc3a146102ae576100fe565b80634e71d92d116100d15780634e71d92d1461019b5780635e1e09a1146101b2578063704b6c02146101dd57806372f702f314610206576100fe565b806319d1ad9c146101035780631ae145181461012e5780632def6620146101595780634c73890914610170575b600080fd5b34801561010f57600080fd5b5061011861039f565b60405161012591906116a2565b60405180910390f35b34801561013a57600080fd5b506101436103a9565b60405161015091906116a2565b60405180910390f35b34801561016557600080fd5b5061016e6103b3565b005b34801561017c57600080fd5b5061018561073f565b60405161019291906116a2565b60405180910390f35b3480156101a757600080fd5b506101b0610786565b005b3480156101be57600080fd5b506101c76109a5565b6040516101d4919061150c565b60405180910390f35b3480156101e957600080fd5b5061020460048036038101906101ff919061134c565b6109ce565b005b34801561021257600080fd5b5061021b610aa4565b6040516102289190611587565b60405180910390f35b34801561023d57600080fd5b506102586004803603810190610253919061139e565b610ac8565b005b34801561026657600080fd5b5061026f610b64565b60405161027c919061150c565b60405180910390f35b34801561029157600080fd5b506102ac60048036038101906102a7919061139e565b610b8e565b005b6102c860048036038101906102c3919061139e565b610c2a565b005b3480156102d657600080fd5b506102df610e5f565b6040516102ec9190611587565b60405180910390f35b34801561030157600080fd5b5061031c6004803603810190610317919061134c565b610e85565b60405161032991906116a2565b60405180910390f35b34801561033e57600080fd5b506103476110ab565b60405161035491906116a2565b60405180910390f35b34801561036957600080fd5b506103726110f5565b005b34801561038057600080fd5b50610389611303565b60405161039691906116a2565b60405180910390f35b6000600654905090565b6000600454905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c90611642565b60405180910390fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff161515146104cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c290611622565b60405180910390fd5b603c6005546104da9190611755565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015461052791906116ce565b4211610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90611602565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff1660e01b815260040161060292919061155e565b602060405180830381600087803b15801561061c57600080fd5b505af1158015610630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106549190611375565b506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff0219169083151502179055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b61078f33610e85565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015461086791906117af565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108c692919061155e565b602060405180830381600087803b1580156108e057600080fd5b505af11580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109189190611375565b50600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a56906115a2565b60405180910390fd5b81600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b50906115a2565b60405180910390fd5b816004819055505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c16906115a2565b60405180910390fd5b816005819055505050565b60008111610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c64906115e2565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610cca93929190611527565b602060405180830381600087803b158015610ce457600080fd5b505af1158015610cf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1c9190611375565b5042600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dfa91906116ce565b925050819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff02191690831515021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080603c600454610e979190611755565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610ee491906116ce565b9050600042905081811015610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2590611682565b60405180910390fd5b60001515600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff161515141561105e57600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546064600654603c8585610fe091906117af565b600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461102d9190611755565b6110379190611724565b6110419190611755565b61104b9190611724565b61105591906117af565b925050506110a6565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154925050505b919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541161117a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117190611662565b60405180910390fd5b60001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16151514611210576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611207906115c2565b60405180910390fd5b61121933610e85565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff02191690831515021790555042600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550565b6000600554905090565b60008135905061131c81611a41565b92915050565b60008151905061133181611a58565b92915050565b60008135905061134681611a6f565b92915050565b60006020828403121561135e57600080fd5b600061136c8482850161130d565b91505092915050565b60006020828403121561138757600080fd5b600061139584828501611322565b91505092915050565b6000602082840312156113b057600080fd5b60006113be84828501611337565b91505092915050565b6113d0816117e3565b82525050565b6113df8161182b565b82525050565b60006113f2600c836116bd565b91506113fd826118ad565b602082019050919050565b60006114156011836116bd565b9150611420826118d6565b602082019050919050565b6000611438601d836116bd565b9150611443826118ff565b602082019050919050565b600061145b6022836116bd565b915061146682611928565b604082019050919050565b600061147e601f836116bd565b915061148982611977565b602082019050919050565b60006114a16011836116bd565b91506114ac826119a0565b602082019050919050565b60006114c46017836116bd565b91506114cf826119c9565b602082019050919050565b60006114e76022836116bd565b91506114f2826119f2565b604082019050919050565b61150681611821565b82525050565b600060208201905061152160008301846113c7565b92915050565b600060608201905061153c60008301866113c7565b61154960208301856113c7565b61155660408301846114fd565b949350505050565b600060408201905061157360008301856113c7565b61158060208301846114fd565b9392505050565b600060208201905061159c60008301846113d6565b92915050565b600060208201905081810360008301526115bb816113e5565b9050919050565b600060208201905081810360008301526115db81611408565b9050919050565b600060208201905081810360008301526115fb8161142b565b9050919050565b6000602082019050818103600083015261161b8161144e565b9050919050565b6000602082019050818103600083015261163b81611471565b9050919050565b6000602082019050818103600083015261165b81611494565b9050919050565b6000602082019050818103600083015261167b816114b7565b9050919050565b6000602082019050818103600083015261169b816114da565b9050919050565b60006020820190506116b760008301846114fd565b92915050565b600082825260208201905092915050565b60006116d982611821565b91506116e483611821565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117195761171861184f565b5b828201905092915050565b600061172f82611821565b915061173a83611821565b92508261174a5761174961187e565b5b828204905092915050565b600061176082611821565b915061176b83611821565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117a4576117a361184f565b5b828202905092915050565b60006117ba82611821565b91506117c583611821565b9250828210156117d8576117d761184f565b5b828203905092915050565b60006117ee82611801565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118368261183d565b9050919050565b600061184882611801565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b7f416c726561647920726571756573746564000000000000000000000000000000600082015250565b7f416d6f756e74206d7573742062652067726561746572207468656e2030000000600082015250565b7f506c6561736520776169742c20756e7374616b696e6720696e2070726f67726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f506c65617365207265717565737420756e7374616b6520617420666972737400600082015250565b7f596f75722062616c616e63652069732030000000000000000000000000000000600082015250565b7f596f7572207374616b652062616c616e63652069732030000000000000000000600082015250565b7f536f7272792c207374616b696e6720776173206e6f742073746172746564207960008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b611a4a816117e3565b8114611a5557600080fd5b50565b611a61816117f5565b8114611a6c57600080fd5b50565b611a7881611821565b8114611a8357600080fd5b5056fea2646970667358221220f5d0cc02da32d38de2a8b22165e57ef00d1f1a0a458f1eca874b36bd7767c52664736f6c63430008040033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Staking";
  }

  deploy(
    _stakingToken: string,
    _rewardsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _stakingToken,
      _rewardsToken,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _rewardsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardsToken,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly contractName: "Staking";
  public readonly contractName: "Staking";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
